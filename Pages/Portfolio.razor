@page "/portfolio"
@inject HttpClient Http

<PageTitle>Portfolio</PageTitle>

<article class="portfolio">
    <h1>Portfolio</h1>

    @if (projects == null)
    {
        <p>Hämtar innehåll...</p>
    }
    else
    {
        @foreach (var project in projects)
        {
            <section class="project">
                <div class="text">
                    <h2>@project.Title</h2>
                    <p>@project.Description</p>
                    @if (project.Techniques.Length > 0)
                    {
                        <p>Tekniker: <em>@string.Join(", ", project.Techniques)</em></p>
                    }
                    <p><a href="@project.Url" target="_blank">@project.Title</a> (öppnas i ny flik)</p>
                </div>
                @if (project.ImageName != "-")
                {
                    <img src="http://localhost:5132/images/@project.ImageName" alt="@project.Title">
                }
                else
                {
                    <img src="noimage.jpg" alt="Ingen bildfil uppladdad">
                }
            </section>
        }
    }
    <ScrollToTop />
</article>

@code {
    // Array för att lagra projekt
    private Project[]? projects;

    // Metod som exekveras när komponenten initialiseras
    protected override async Task OnInitializedAsync()
    {
        // Hämtar projekt i JSON-format från angiven URL
        projects = await Http.GetFromJsonAsync<Project[]>("http://localhost:5132/api/project");
    }

    // Klass som representerar ett projekt
    public class Project
    {
        public int Id { get; set; }
        public string? Title { get; set; }
        public string? Description { get; set; }
        public string? Url { get; set; }
        public string? ImageName { get; set; }
        public string[] Techniques { get; set; } = Array.Empty<string>();
    }
}